name: Build rc4_encryptor for ImmortalWrt

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 步骤1: 检出你的代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤2: 安装依赖并下载、解压 SDK
      - name: Setup SDK
        run: |
          sudo apt-get update && sudo apt-get install -y zstd
          SDK_URL="https://downloads.immortalwrt.org/releases/24.10.2/targets/ramips/mt7620/immortalwrt-sdk-24.10.2-ramips-mt7620_gcc-13.3.0_musl.Linux-x86_64.tar.zst"
          SDK_FILE="immortalwrt-sdk.tar.zst"
          curl -Lfo $SDK_FILE "$SDK_URL"
          if [ ! -s "$SDK_FILE" ]; then
            echo "::error::SDK download failed or the file is empty."
            exit 1
          fi
          mkdir sdk
          tar -I zstd -xf $SDK_FILE -C sdk --strip-components=1
          echo "SDK extracted successfully."

      # 步骤3: 编译 C 代码 (已修正为正确的 rc4.c 路径)
      - name: Compile rc4_encryptor
        run: |
          # 找到编译器
          CC=$(find sdk/staging_dir/toolchain-*/bin -type f -name '*-gcc' -print -quit)
          
          if [ -z "$CC" ]; then
            echo "::error::Cross-compiler not found!"
            exit 1
          fi

          echo "Using compiler: $CC"

          # 定义源文件和输出文件的路径
          SOURCE_FILE=".github/workflows/rc4.c"
          OUTPUT_FILE="rc4_encryptor"

          # 检查源文件是否存在
          if [ ! -f "$SOURCE_FILE" ]; then
            echo "::error::Source file not found at $SOURCE_FILE"
            ls -R # 打印出所有文件和目录结构，方便调试
            exit 1
          fi
          
          # 执行编译，明确指定源文件和输出文件的路径
          $CC "$SOURCE_FILE" -o "$OUTPUT_FILE" -static
          
          echo "Compilation finished."
          ls -l "$OUTPUT_FILE"

      # 步骤4: 上传构建产物
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rc4_encryptor_mipsel_24kc
          path: rc4_encryptor
